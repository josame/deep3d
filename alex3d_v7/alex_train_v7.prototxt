layer {
  name: "d3dnet"
  type: "Data"
  transform_param {
    scale: 1.000
  }
  data_param {
    source: "../../../../mnt/remote_data/mylmdb"
    backend: LMDB
    batch_size: 256
  }
  top: "data"
  top: "label"
  include: { phase: TRAIN }
}
layer {
  name: "d3dnet"
  type: "Data"
  transform_param {
    scale: 1.000
  }
  data_param {
    source: "../../../../mnt/remote_data/mylmdb_test"
    backend: LMDB
    batch_size: 250
  }
  top: "data"
  top: "label"
  include: { phase: TEST }
}
layer {
  name: "conv1"
  type: "Convolution"
  param { lr_mult: 1}
  param { lr_mult: 1}
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "data"
  top: "conv1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  pooling_param {
    kernel_size: 2
    stride: 2
    pool: MAX
  }
  bottom: "norm1"
  top: "pool1"
}

layer {
  name: "pool5/drop_7x7_s1"
  type: "Dropout"
  bottom: "pool1"
  top: "pool5/drop_7x7_s1"
  dropout_param {
    dropout_ratio: 0.4
  }
}

layer {
  name: "conv22"
  type: "Convolution"
  param { lr_mult: 1}
  param { lr_mult: 1}
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "pool5/drop_7x7_s1"
  top: "conv22"
}

layer {
  name: "relu22"
  type: "ReLU"
  bottom: "conv22"
  top: "conv22"
}

layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv22"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "conv33"
  type: "Convolution"
  param { lr_mult: 1}
  param { lr_mult: 1}
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "norm2"
  top: "conv33"
}


layer {
  name: "relu33"
  type: "ReLU"
  bottom: "conv33"
  top: "conv33"
}

layer {
  name: "norm3"
  type: "LRN"
  bottom: "conv33"
  top: "norm3"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}


layer {
  name: "pool3"
  type: "Pooling"
  pooling_param {
    kernel_size: 2
    stride: 2
    pool: MAX
  }
  bottom: "norm3"
  top: "pool3"
}
layer {
  name: "drop_7x7_s1"
  type: "Dropout"
  bottom: "pool3"
  top: "drop_7x7_s1"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  param {lr_mult: 1}
  param {lr_mult: 1}
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "drop_7x7_s1"
  top: "ip1"
}
layer {
  name: "relu44"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  param {lr_mult: 1}
  param {lr_mult: 1}
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "ip1"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
}
